name: build-image-ci

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      push_image:
        description: "Push image to OCIR?"
        required: false
        default: false
        type: boolean
      environment:
        description: "Deployment environment"
        required: false
        default: "prod"
        type: choice
        options:
          - prod
          - dev
      platforms:
        description: "Target platforms"
        required: false
        default: "linux/arm64"
        type: choice
        options:
          - linux/amd64
          - linux/arm64
          - linux/amd64,linux/arm64

env:
  IMAGE_NAME: krakend

jobs:
  build-amd64:
    name: Build AMD64 Docker Image
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || contains(github.event.inputs.platforms, 'amd64')
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'prod' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
      
    - name: Set IMAGE_TAG
      id: vars
      run: echo "tag=${{ github.run_number }}-$(date +%Y%m%d)" >> $GITHUB_OUTPUT

    - name: Login to Oracle Cloud Infrastructure Registry (OCIR)
      run: |
        echo "${{ secrets.OCIR_AUTH_TOKEN }}" | docker login -u "${{ secrets.OCIR_NAMESPACE }}/${{ secrets.OCIR_USER_MAIL }}" ${{ secrets.OCI_REGION }}.ocir.io --password-stdin     

    - name: Build AMD64 image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        context: .
        file: Dockerfile
        tags: ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCIR_NAMESPACE }}/${{ secrets.NAME_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
        push: false
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GOLANG_VERSION=1.24.3
          ALPINE_VERSION=3.21

    - name: Push Docker Image to Oracle Cloud Registry
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.push_image || false }}
      run: |
        docker push ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

  build-arm64:
    name: Build ARM64 Docker Image
    runs-on: ubuntu-24.04-arm
    if: github.event_name != 'workflow_dispatch' || contains(github.event.inputs.platforms, 'arm64')
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'prod' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
      
    - name: Set IMAGE_TAG
      id: vars
      run: echo "tag=${{ github.run_number }}-$(date +%Y%m%d)" >> $GITHUB_OUTPUT

    - name: Login to Oracle Cloud Infrastructure Registry (OCIR)
      run: |
        echo "${{ secrets.OCIR_AUTH_TOKEN }}" | docker login -u "${{ secrets.OCIR_NAMESPACE }}/${{ secrets.OCIR_USER_MAIL }}" ${{ secrets.OCI_REGION }}.ocir.io --password-stdin     

    - name: Build ARM64 image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/arm64
        context: .
        file: Dockerfile
        tags: ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCIR_NAMESPACE }}/${{ secrets.NAME_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
        push: false
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GOLANG_VERSION=1.24.3
          ALPINE_VERSION=3.21

    - name: Push Docker Image to Oracle Cloud Registry
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.push_image || false }}
      run: |
        docker push ${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ secrets.NAME_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}